// Generated by CoffeeScript 1.7.1
(function() {
  var Promise, RolloutControl, request;

  RolloutControl = {};

  module.exports = RolloutControl;

  request = require('superagent');

  Promise = require('rsvp').Promise;

  RolloutControl.Client = (function() {
    function Client(url, username, password) {
      this.url = url;
      this.username = username;
      this.password = password;
    }

    Client.prototype.formatError = function(res) {
      return {
        message: res.text,
        unauthorized: res.unauthorized,
        status: res.status,
        statusType: res.statusType
      };
    };

    Client.prototype.apiRequest = function(method, path, data) {
      var req, url;
      url = "" + (this.url.replace(/\/$/, '')) + path;
      req = request(method, url);
      if (this.username) {
        req.set('Authorization', "Basic " + (new Buffer("" + this.username + ":" + this.password).toString('base64')));
      }
      if (method === 'GET') {
        req.set('Accept', 'application/json');
      }
      if (method === 'POST' || method === 'PATCH') {
        req.set('Content-Type', 'application/json');
      }
      if (data) {
        req.send(data);
      }
      return new Promise((function(_this) {
        return function(done, fail) {
          return req.end(function(res) {
            if (res.ok) {
              return done(res.body);
            } else {
              return fail(_this.formatError(res));
            }
          });
        };
      })(this));
    };

    Client.prototype.list = function() {
      return this.apiRequest('GET', '/features');
    };

    Client.prototype.get = function(featureName) {
      return this.apiRequest('GET', "/features/" + featureName);
    };

    Client.prototype.activate = function(featureName) {
      return this.apiRequest('PATCH', "/features/" + featureName, {
        percentage: 100
      });
    };

    Client.prototype.deactivate = function(featureName) {
      return this.apiRequest('PATCH', "/features/" + featureName, {
        percentage: 0
      });
    };

    Client.prototype.activatePercentage = function(featureName, percentage) {
      return this.apiRequest('PATCH', "/features/" + featureName, {
        percentage: percentage
      });
    };

    Client.prototype.activateGroup = function(featureName, group) {
      return this.apiRequest('POST', "/features/" + featureName + "/groups", {
        group: group
      });
    };

    Client.prototype.deactivateGroup = function(featureName, group) {
      return this.apiRequest('DELETE', "/features/" + featureName + "/groups/" + group);
    };

    Client.prototype.activateUser = function(featureName, userId) {
      return this.apiRequest('POST', "/features/" + featureName + "/users", {
        user_id: userId
      });
    };

    Client.prototype.deactivateUser = function(featureName, userId) {
      return this.apiRequest('DELETE', "/features/" + featureName + "/users/" + userId);
    };

    return Client;

  })();

}).call(this);
